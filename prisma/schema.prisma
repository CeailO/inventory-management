generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  role          Role       @default(USER)
  accounts      Account[]
  sessions      Session[]
  categories    Category[]
  products      Product[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
  user     User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
}

model Date {
  id         String   @id @default(cuid())
  date       DateTime @default(now())
  stock      Int      @default(0)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float    @default(0)
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String
  date        Date[]
  user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  lastUpdate  DateTime @default(now())
  createdAt   DateTime @default(now())
}

enum Role {
  ADMIN
  USER
}
